
ProgrammingAssignment3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000031c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  00000370  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000370  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000044  00000000  00000000  000003a0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  000003e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000372a  00000000  00000000  00000424  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000324b  00000000  00000000  00003b4e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004fb  00000000  00000000  00006d99  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a4  00000000  00000000  00007294  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00004edd  00000000  00000000  00007338  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000251  00000000  00000000  0000c215  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  0000c466  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00000048  00000000  00000000  0000c4c6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	fd c0       	rjmp	.+506    	; 0x1fc <__ctors_end>
   2:	00 00       	nop
   4:	05 c1       	rjmp	.+522    	; 0x210 <__bad_interrupt>
   6:	00 00       	nop
   8:	03 c1       	rjmp	.+518    	; 0x210 <__bad_interrupt>
   a:	00 00       	nop
   c:	01 c1       	rjmp	.+514    	; 0x210 <__bad_interrupt>
   e:	00 00       	nop
  10:	ff c0       	rjmp	.+510    	; 0x210 <__bad_interrupt>
  12:	00 00       	nop
  14:	fd c0       	rjmp	.+506    	; 0x210 <__bad_interrupt>
  16:	00 00       	nop
  18:	fb c0       	rjmp	.+502    	; 0x210 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	f9 c0       	rjmp	.+498    	; 0x210 <__bad_interrupt>
  1e:	00 00       	nop
  20:	f7 c0       	rjmp	.+494    	; 0x210 <__bad_interrupt>
  22:	00 00       	nop
  24:	f5 c0       	rjmp	.+490    	; 0x210 <__bad_interrupt>
  26:	00 00       	nop
  28:	f3 c0       	rjmp	.+486    	; 0x210 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	f1 c0       	rjmp	.+482    	; 0x210 <__bad_interrupt>
  2e:	00 00       	nop
  30:	ef c0       	rjmp	.+478    	; 0x210 <__bad_interrupt>
  32:	00 00       	nop
  34:	ed c0       	rjmp	.+474    	; 0x210 <__bad_interrupt>
  36:	00 00       	nop
  38:	eb c0       	rjmp	.+470    	; 0x210 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	e9 c0       	rjmp	.+466    	; 0x210 <__bad_interrupt>
  3e:	00 00       	nop
  40:	e7 c0       	rjmp	.+462    	; 0x210 <__bad_interrupt>
  42:	00 00       	nop
  44:	e5 c0       	rjmp	.+458    	; 0x210 <__bad_interrupt>
  46:	00 00       	nop
  48:	e3 c0       	rjmp	.+454    	; 0x210 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	e1 c0       	rjmp	.+450    	; 0x210 <__bad_interrupt>
  4e:	00 00       	nop
  50:	df c0       	rjmp	.+446    	; 0x210 <__bad_interrupt>
  52:	00 00       	nop
  54:	dd c0       	rjmp	.+442    	; 0x210 <__bad_interrupt>
  56:	00 00       	nop
  58:	db c0       	rjmp	.+438    	; 0x210 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	d9 c0       	rjmp	.+434    	; 0x210 <__bad_interrupt>
  5e:	00 00       	nop
  60:	d7 c0       	rjmp	.+430    	; 0x210 <__bad_interrupt>
  62:	00 00       	nop
  64:	d5 c0       	rjmp	.+426    	; 0x210 <__bad_interrupt>
  66:	00 00       	nop
  68:	d3 c0       	rjmp	.+422    	; 0x210 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	d1 c0       	rjmp	.+418    	; 0x210 <__bad_interrupt>
  6e:	00 00       	nop
  70:	cf c0       	rjmp	.+414    	; 0x210 <__bad_interrupt>
  72:	00 00       	nop
  74:	cd c0       	rjmp	.+410    	; 0x210 <__bad_interrupt>
  76:	00 00       	nop
  78:	cb c0       	rjmp	.+406    	; 0x210 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	c9 c0       	rjmp	.+402    	; 0x210 <__bad_interrupt>
  7e:	00 00       	nop
  80:	c7 c0       	rjmp	.+398    	; 0x210 <__bad_interrupt>
  82:	00 00       	nop
  84:	c5 c0       	rjmp	.+394    	; 0x210 <__bad_interrupt>
  86:	00 00       	nop
  88:	c3 c0       	rjmp	.+390    	; 0x210 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	c1 c0       	rjmp	.+386    	; 0x210 <__bad_interrupt>
  8e:	00 00       	nop
  90:	bf c0       	rjmp	.+382    	; 0x210 <__bad_interrupt>
  92:	00 00       	nop
  94:	bd c0       	rjmp	.+378    	; 0x210 <__bad_interrupt>
  96:	00 00       	nop
  98:	bb c0       	rjmp	.+374    	; 0x210 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	b9 c0       	rjmp	.+370    	; 0x210 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	b7 c0       	rjmp	.+366    	; 0x210 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	b5 c0       	rjmp	.+362    	; 0x210 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	b3 c0       	rjmp	.+358    	; 0x210 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	b1 c0       	rjmp	.+354    	; 0x210 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	af c0       	rjmp	.+350    	; 0x210 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	ad c0       	rjmp	.+346    	; 0x210 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	ab c0       	rjmp	.+342    	; 0x210 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	a9 c0       	rjmp	.+338    	; 0x210 <__bad_interrupt>
  be:	00 00       	nop
  c0:	a7 c0       	rjmp	.+334    	; 0x210 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	a5 c0       	rjmp	.+330    	; 0x210 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	a3 c0       	rjmp	.+326    	; 0x210 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	a1 c0       	rjmp	.+322    	; 0x210 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	9f c0       	rjmp	.+318    	; 0x210 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	9d c0       	rjmp	.+314    	; 0x210 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	9b c0       	rjmp	.+310    	; 0x210 <__bad_interrupt>
  da:	00 00       	nop
  dc:	99 c0       	rjmp	.+306    	; 0x210 <__bad_interrupt>
  de:	00 00       	nop
  e0:	97 c0       	rjmp	.+302    	; 0x210 <__bad_interrupt>
  e2:	00 00       	nop
  e4:	95 c0       	rjmp	.+298    	; 0x210 <__bad_interrupt>
  e6:	00 00       	nop
  e8:	93 c0       	rjmp	.+294    	; 0x210 <__bad_interrupt>
  ea:	00 00       	nop
  ec:	91 c0       	rjmp	.+290    	; 0x210 <__bad_interrupt>
  ee:	00 00       	nop
  f0:	8f c0       	rjmp	.+286    	; 0x210 <__bad_interrupt>
  f2:	00 00       	nop
  f4:	8d c0       	rjmp	.+282    	; 0x210 <__bad_interrupt>
  f6:	00 00       	nop
  f8:	8b c0       	rjmp	.+278    	; 0x210 <__bad_interrupt>
  fa:	00 00       	nop
  fc:	89 c0       	rjmp	.+274    	; 0x210 <__bad_interrupt>
  fe:	00 00       	nop
 100:	87 c0       	rjmp	.+270    	; 0x210 <__bad_interrupt>
 102:	00 00       	nop
 104:	85 c0       	rjmp	.+266    	; 0x210 <__bad_interrupt>
 106:	00 00       	nop
 108:	83 c0       	rjmp	.+262    	; 0x210 <__bad_interrupt>
 10a:	00 00       	nop
 10c:	81 c0       	rjmp	.+258    	; 0x210 <__bad_interrupt>
 10e:	00 00       	nop
 110:	7f c0       	rjmp	.+254    	; 0x210 <__bad_interrupt>
 112:	00 00       	nop
 114:	7d c0       	rjmp	.+250    	; 0x210 <__bad_interrupt>
 116:	00 00       	nop
 118:	7b c0       	rjmp	.+246    	; 0x210 <__bad_interrupt>
 11a:	00 00       	nop
 11c:	79 c0       	rjmp	.+242    	; 0x210 <__bad_interrupt>
 11e:	00 00       	nop
 120:	77 c0       	rjmp	.+238    	; 0x210 <__bad_interrupt>
 122:	00 00       	nop
 124:	75 c0       	rjmp	.+234    	; 0x210 <__bad_interrupt>
 126:	00 00       	nop
 128:	73 c0       	rjmp	.+230    	; 0x210 <__bad_interrupt>
 12a:	00 00       	nop
 12c:	71 c0       	rjmp	.+226    	; 0x210 <__bad_interrupt>
 12e:	00 00       	nop
 130:	6f c0       	rjmp	.+222    	; 0x210 <__bad_interrupt>
 132:	00 00       	nop
 134:	6d c0       	rjmp	.+218    	; 0x210 <__bad_interrupt>
 136:	00 00       	nop
 138:	6b c0       	rjmp	.+214    	; 0x210 <__bad_interrupt>
 13a:	00 00       	nop
 13c:	69 c0       	rjmp	.+210    	; 0x210 <__bad_interrupt>
 13e:	00 00       	nop
 140:	67 c0       	rjmp	.+206    	; 0x210 <__bad_interrupt>
 142:	00 00       	nop
 144:	65 c0       	rjmp	.+202    	; 0x210 <__bad_interrupt>
 146:	00 00       	nop
 148:	63 c0       	rjmp	.+198    	; 0x210 <__bad_interrupt>
 14a:	00 00       	nop
 14c:	61 c0       	rjmp	.+194    	; 0x210 <__bad_interrupt>
 14e:	00 00       	nop
 150:	5f c0       	rjmp	.+190    	; 0x210 <__bad_interrupt>
 152:	00 00       	nop
 154:	5d c0       	rjmp	.+186    	; 0x210 <__bad_interrupt>
 156:	00 00       	nop
 158:	5b c0       	rjmp	.+182    	; 0x210 <__bad_interrupt>
 15a:	00 00       	nop
 15c:	59 c0       	rjmp	.+178    	; 0x210 <__bad_interrupt>
 15e:	00 00       	nop
 160:	57 c0       	rjmp	.+174    	; 0x210 <__bad_interrupt>
 162:	00 00       	nop
 164:	55 c0       	rjmp	.+170    	; 0x210 <__bad_interrupt>
 166:	00 00       	nop
 168:	53 c0       	rjmp	.+166    	; 0x210 <__bad_interrupt>
 16a:	00 00       	nop
 16c:	51 c0       	rjmp	.+162    	; 0x210 <__bad_interrupt>
 16e:	00 00       	nop
 170:	4f c0       	rjmp	.+158    	; 0x210 <__bad_interrupt>
 172:	00 00       	nop
 174:	4d c0       	rjmp	.+154    	; 0x210 <__bad_interrupt>
 176:	00 00       	nop
 178:	4b c0       	rjmp	.+150    	; 0x210 <__bad_interrupt>
 17a:	00 00       	nop
 17c:	49 c0       	rjmp	.+146    	; 0x210 <__bad_interrupt>
 17e:	00 00       	nop
 180:	47 c0       	rjmp	.+142    	; 0x210 <__bad_interrupt>
 182:	00 00       	nop
 184:	45 c0       	rjmp	.+138    	; 0x210 <__bad_interrupt>
 186:	00 00       	nop
 188:	43 c0       	rjmp	.+134    	; 0x210 <__bad_interrupt>
 18a:	00 00       	nop
 18c:	41 c0       	rjmp	.+130    	; 0x210 <__bad_interrupt>
 18e:	00 00       	nop
 190:	3f c0       	rjmp	.+126    	; 0x210 <__bad_interrupt>
 192:	00 00       	nop
 194:	3d c0       	rjmp	.+122    	; 0x210 <__bad_interrupt>
 196:	00 00       	nop
 198:	3b c0       	rjmp	.+118    	; 0x210 <__bad_interrupt>
 19a:	00 00       	nop
 19c:	39 c0       	rjmp	.+114    	; 0x210 <__bad_interrupt>
 19e:	00 00       	nop
 1a0:	37 c0       	rjmp	.+110    	; 0x210 <__bad_interrupt>
 1a2:	00 00       	nop
 1a4:	35 c0       	rjmp	.+106    	; 0x210 <__bad_interrupt>
 1a6:	00 00       	nop
 1a8:	33 c0       	rjmp	.+102    	; 0x210 <__bad_interrupt>
 1aa:	00 00       	nop
 1ac:	31 c0       	rjmp	.+98     	; 0x210 <__bad_interrupt>
 1ae:	00 00       	nop
 1b0:	2f c0       	rjmp	.+94     	; 0x210 <__bad_interrupt>
 1b2:	00 00       	nop
 1b4:	2d c0       	rjmp	.+90     	; 0x210 <__bad_interrupt>
 1b6:	00 00       	nop
 1b8:	2b c0       	rjmp	.+86     	; 0x210 <__bad_interrupt>
 1ba:	00 00       	nop
 1bc:	29 c0       	rjmp	.+82     	; 0x210 <__bad_interrupt>
 1be:	00 00       	nop
 1c0:	27 c0       	rjmp	.+78     	; 0x210 <__bad_interrupt>
 1c2:	00 00       	nop
 1c4:	25 c0       	rjmp	.+74     	; 0x210 <__bad_interrupt>
 1c6:	00 00       	nop
 1c8:	23 c0       	rjmp	.+70     	; 0x210 <__bad_interrupt>
 1ca:	00 00       	nop
 1cc:	21 c0       	rjmp	.+66     	; 0x210 <__bad_interrupt>
 1ce:	00 00       	nop
 1d0:	1f c0       	rjmp	.+62     	; 0x210 <__bad_interrupt>
 1d2:	00 00       	nop
 1d4:	1d c0       	rjmp	.+58     	; 0x210 <__bad_interrupt>
 1d6:	00 00       	nop
 1d8:	1b c0       	rjmp	.+54     	; 0x210 <__bad_interrupt>
 1da:	00 00       	nop
 1dc:	19 c0       	rjmp	.+50     	; 0x210 <__bad_interrupt>
 1de:	00 00       	nop
 1e0:	17 c0       	rjmp	.+46     	; 0x210 <__bad_interrupt>
 1e2:	00 00       	nop
 1e4:	15 c0       	rjmp	.+42     	; 0x210 <__bad_interrupt>
 1e6:	00 00       	nop
 1e8:	13 c0       	rjmp	.+38     	; 0x210 <__bad_interrupt>
 1ea:	00 00       	nop
 1ec:	11 c0       	rjmp	.+34     	; 0x210 <__bad_interrupt>
 1ee:	00 00       	nop
 1f0:	0f c0       	rjmp	.+30     	; 0x210 <__bad_interrupt>
 1f2:	00 00       	nop
 1f4:	0d c0       	rjmp	.+26     	; 0x210 <__bad_interrupt>
 1f6:	00 00       	nop
 1f8:	0b c0       	rjmp	.+22     	; 0x210 <__bad_interrupt>
	...

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e5       	ldi	r29, 0x5F	; 95
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60
 20c:	62 d0       	rcall	.+196    	; 0x2d2 <main>
 20e:	84 c0       	rjmp	.+264    	; 0x318 <_exit>

00000210 <__bad_interrupt>:
 210:	f7 ce       	rjmp	.-530    	; 0x0 <__vectors>

00000212 <delay>:
	unsigned char regValue;
	
	regValue = *((volatile unsigned char *)addr);
	
	return (regValue);
}
 212:	cf 93       	push	r28
 214:	df 93       	push	r29
 216:	1f 92       	push	r1
 218:	1f 92       	push	r1
 21a:	cd b7       	in	r28, 0x3d	; 61
 21c:	de b7       	in	r29, 0x3e	; 62
 21e:	00 97       	sbiw	r24, 0x00	; 0
 220:	c9 f0       	breq	.+50     	; 0x254 <delay+0x42>
 222:	40 e0       	ldi	r20, 0x00	; 0
 224:	50 e0       	ldi	r21, 0x00	; 0
 226:	19 82       	std	Y+1, r1	; 0x01
 228:	1a 82       	std	Y+2, r1	; 0x02
 22a:	29 81       	ldd	r18, Y+1	; 0x01
 22c:	3a 81       	ldd	r19, Y+2	; 0x02
 22e:	28 17       	cp	r18, r24
 230:	39 07       	cpc	r19, r25
 232:	58 f4       	brcc	.+22     	; 0x24a <delay+0x38>
 234:	29 81       	ldd	r18, Y+1	; 0x01
 236:	3a 81       	ldd	r19, Y+2	; 0x02
 238:	2f 5f       	subi	r18, 0xFF	; 255
 23a:	3f 4f       	sbci	r19, 0xFF	; 255
 23c:	29 83       	std	Y+1, r18	; 0x01
 23e:	3a 83       	std	Y+2, r19	; 0x02
 240:	29 81       	ldd	r18, Y+1	; 0x01
 242:	3a 81       	ldd	r19, Y+2	; 0x02
 244:	28 17       	cp	r18, r24
 246:	39 07       	cpc	r19, r25
 248:	a8 f3       	brcs	.-22     	; 0x234 <delay+0x22>
 24a:	4f 5f       	subi	r20, 0xFF	; 255
 24c:	5f 4f       	sbci	r21, 0xFF	; 255
 24e:	84 17       	cp	r24, r20
 250:	95 07       	cpc	r25, r21
 252:	49 f7       	brne	.-46     	; 0x226 <delay+0x14>
 254:	0f 90       	pop	r0
 256:	0f 90       	pop	r0
 258:	df 91       	pop	r29
 25a:	cf 91       	pop	r28
 25c:	08 95       	ret

0000025e <blinkLEDs>:
 25e:	cf 92       	push	r12
 260:	df 92       	push	r13
 262:	ef 92       	push	r14
 264:	ff 92       	push	r15
 266:	0f 93       	push	r16
 268:	1f 93       	push	r17
 26a:	cf 93       	push	r28
 26c:	df 93       	push	r29
 26e:	1f 92       	push	r1
 270:	1f 92       	push	r1
 272:	cd b7       	in	r28, 0x3d	; 61
 274:	de b7       	in	r29, 0x3e	; 62
 276:	c8 2e       	mov	r12, r24
 278:	d6 2e       	mov	r13, r22
 27a:	81 e0       	ldi	r24, 0x01	; 1
 27c:	90 e0       	ldi	r25, 0x00	; 0
 27e:	89 83       	std	Y+1, r24	; 0x01
 280:	9a 83       	std	Y+2, r25	; 0x02
 282:	07 ee       	ldi	r16, 0xE7	; 231
 284:	17 e0       	ldi	r17, 0x07	; 7
 286:	0f 2e       	mov	r0, r31
 288:	f8 ea       	ldi	r31, 0xA8	; 168
 28a:	ef 2e       	mov	r14, r31
 28c:	f6 e0       	ldi	r31, 0x06	; 6
 28e:	ff 2e       	mov	r15, r31
 290:	f0 2d       	mov	r31, r0
 292:	10 c0       	rjmp	.+32     	; 0x2b4 <blinkLEDs+0x56>
 294:	f8 01       	movw	r30, r16
 296:	c0 82       	st	Z, r12
 298:	88 ec       	ldi	r24, 0xC8	; 200
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	ba df       	rcall	.-140    	; 0x212 <delay>
 29e:	f8 01       	movw	r30, r16
 2a0:	d0 82       	st	Z, r13
 2a2:	f7 01       	movw	r30, r14
 2a4:	80 81       	ld	r24, Z
 2a6:	81 fd       	sbrc	r24, 1
 2a8:	03 c0       	rjmp	.+6      	; 0x2b0 <blinkLEDs+0x52>
 2aa:	80 81       	ld	r24, Z
 2ac:	82 ff       	sbrs	r24, 2
 2ae:	02 c0       	rjmp	.+4      	; 0x2b4 <blinkLEDs+0x56>
 2b0:	19 82       	std	Y+1, r1	; 0x01
 2b2:	1a 82       	std	Y+2, r1	; 0x02
 2b4:	89 81       	ldd	r24, Y+1	; 0x01
 2b6:	9a 81       	ldd	r25, Y+2	; 0x02
 2b8:	89 2b       	or	r24, r25
 2ba:	61 f7       	brne	.-40     	; 0x294 <blinkLEDs+0x36>
 2bc:	0f 90       	pop	r0
 2be:	0f 90       	pop	r0
 2c0:	df 91       	pop	r29
 2c2:	cf 91       	pop	r28
 2c4:	1f 91       	pop	r17
 2c6:	0f 91       	pop	r16
 2c8:	ff 90       	pop	r15
 2ca:	ef 90       	pop	r14
 2cc:	df 90       	pop	r13
 2ce:	cf 90       	pop	r12
 2d0:	08 95       	ret

000002d2 <main>:
		for (temp2 = 0; temp2 < delay; temp2 ++);
	}
}

void WriteReg(unsigned int addr, unsigned int value) {
	*((volatile unsigned char *)addr) = value;
 2d2:	8f ef       	ldi	r24, 0xFF	; 255
 2d4:	80 93 e0 07 	sts	0x07E0, r24	; 0x8007e0 <__TEXT_REGION_LENGTH__+0x7007e0>
 2d8:	10 92 a0 06 	sts	0x06A0, r1	; 0x8006a0 <__TEXT_REGION_LENGTH__+0x7006a0>
}

int ReadReg(unsigned int addr) {
	unsigned char regValue;
	
	regValue = *((volatile unsigned char *)addr);
 2dc:	c8 ea       	ldi	r28, 0xA8	; 168
 2de:	d6 e0       	ldi	r29, 0x06	; 6
 2e0:	88 81       	ld	r24, Y
	// set portf data direction to input
	WriteReg(PORTF, 0x00);
	
	while (1) {
		
		if ((ReadReg(PORTF_IN) & (1 << 1)) == 0x00) {
 2e2:	81 fd       	sbrc	r24, 1
 2e4:	05 c0       	rjmp	.+10     	; 0x2f0 <main+0x1e>
			blinkLEDs(0xfe, 0xff);
 2e6:	6f ef       	ldi	r22, 0xFF	; 255
 2e8:	70 e0       	ldi	r23, 0x00	; 0
 2ea:	8e ef       	ldi	r24, 0xFE	; 254
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	b7 df       	rcall	.-146    	; 0x25e <blinkLEDs>
}

int ReadReg(unsigned int addr) {
	unsigned char regValue;
	
	regValue = *((volatile unsigned char *)addr);
 2f0:	88 81       	ld	r24, Y
		
		if ((ReadReg(PORTF_IN) & (1 << 1)) == 0x00) {
			blinkLEDs(0xfe, 0xff);
		}
		
		if ((ReadReg(PORTF_IN) & (1 << 2)) == 0x00) {
 2f2:	82 fd       	sbrc	r24, 2
 2f4:	05 c0       	rjmp	.+10     	; 0x300 <main+0x2e>
			blinkLEDs(0xfd, 0xff);
 2f6:	6f ef       	ldi	r22, 0xFF	; 255
 2f8:	70 e0       	ldi	r23, 0x00	; 0
 2fa:	8d ef       	ldi	r24, 0xFD	; 253
 2fc:	90 e0       	ldi	r25, 0x00	; 0
 2fe:	af df       	rcall	.-162    	; 0x25e <blinkLEDs>
}

int ReadReg(unsigned int addr) {
	unsigned char regValue;
	
	regValue = *((volatile unsigned char *)addr);
 300:	88 81       	ld	r24, Y
		
		if ((ReadReg(PORTF_IN) & (1 << 2)) == 0x00) {
			blinkLEDs(0xfd, 0xff);
		}
		
		if ((ReadReg(PORTF_IN) & (1 << 1)) != 0x00  && (ReadReg(PORTF_IN) & (1 << 2)) != 0x00) {
 302:	81 ff       	sbrs	r24, 1
 304:	ed cf       	rjmp	.-38     	; 0x2e0 <main+0xe>
}

int ReadReg(unsigned int addr) {
	unsigned char regValue;
	
	regValue = *((volatile unsigned char *)addr);
 306:	88 81       	ld	r24, Y
		
		if ((ReadReg(PORTF_IN) & (1 << 2)) == 0x00) {
			blinkLEDs(0xfd, 0xff);
		}
		
		if ((ReadReg(PORTF_IN) & (1 << 1)) != 0x00  && (ReadReg(PORTF_IN) & (1 << 2)) != 0x00) {
 308:	82 ff       	sbrs	r24, 2
 30a:	ea cf       	rjmp	.-44     	; 0x2e0 <main+0xe>
			blinkLEDs(0xfe, 0xfd);
 30c:	6d ef       	ldi	r22, 0xFD	; 253
 30e:	70 e0       	ldi	r23, 0x00	; 0
 310:	8e ef       	ldi	r24, 0xFE	; 254
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	a4 df       	rcall	.-184    	; 0x25e <blinkLEDs>
 316:	e4 cf       	rjmp	.-56     	; 0x2e0 <main+0xe>

00000318 <_exit>:
 318:	f8 94       	cli

0000031a <__stop_program>:
 31a:	ff cf       	rjmp	.-2      	; 0x31a <__stop_program>
