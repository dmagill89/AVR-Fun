
task3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000434  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  000004a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000028  00802000  00802000  000004a8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004a8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000518  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004a0d  00000000  00000000  000005f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003649  00000000  00000000  00004ffd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005dd  00000000  00000000  00008646  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  00008c24  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000037c6  00000000  00000000  00008e24  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005d7  00000000  00000000  0000c5ea  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  0000cbc1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 fa 00 	jmp	0x1f4	; 0x1f4 <__ctors_end>
   4:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
   8:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
   c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  10:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  14:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  18:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  1c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  20:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  24:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  28:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  2c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  30:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  34:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  38:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  3c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  40:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  44:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  48:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  4c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  50:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  54:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  58:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  5c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  60:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  64:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  68:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  6c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  70:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  74:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  78:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  7c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  80:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  84:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  88:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  8c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  90:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  94:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  98:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  9c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  a0:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  a4:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  a8:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  ac:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  b0:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  b4:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  b8:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  bc:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  c0:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  c4:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  c8:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  cc:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  d0:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  d4:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  d8:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  dc:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  e0:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  e4:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  e8:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  ec:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  f0:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  f4:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  f8:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
  fc:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 100:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 104:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 108:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 10c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 110:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 114:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 118:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 11c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 120:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 124:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 128:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 12c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 130:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 134:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 138:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 13c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 140:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 144:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 148:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 14c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 150:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 154:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 158:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 15c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 160:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 164:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 168:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 16c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 170:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 174:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 178:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 17c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 180:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 184:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 188:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 18c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 190:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 194:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 198:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 19c:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 1a0:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 1a4:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 1a8:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 1ac:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 1b0:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 1b4:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 1b8:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 1bc:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 1c0:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 1c4:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 1c8:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 1cc:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 1d0:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 1d4:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 1d8:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 1dc:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 1e0:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 1e4:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 1e8:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 1ec:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>
 1f0:	0c 94 12 01 	jmp	0x224	; 0x224 <__bad_interrupt>

000001f4 <__ctors_end>:
 1f4:	11 24       	eor	r1, r1
 1f6:	1f be       	out	0x3f, r1	; 63
 1f8:	cf ef       	ldi	r28, 0xFF	; 255
 1fa:	cd bf       	out	0x3d, r28	; 61
 1fc:	df e3       	ldi	r29, 0x3F	; 63
 1fe:	de bf       	out	0x3e, r29	; 62
 200:	00 e0       	ldi	r16, 0x00	; 0
 202:	0c bf       	out	0x3c, r16	; 60
 204:	18 be       	out	0x38, r1	; 56
 206:	19 be       	out	0x39, r1	; 57
 208:	1a be       	out	0x3a, r1	; 58
 20a:	1b be       	out	0x3b, r1	; 59

0000020c <__do_clear_bss>:
 20c:	20 e2       	ldi	r18, 0x20	; 32
 20e:	a0 e0       	ldi	r26, 0x00	; 0
 210:	b0 e2       	ldi	r27, 0x20	; 32
 212:	01 c0       	rjmp	.+2      	; 0x216 <.do_clear_bss_start>

00000214 <.do_clear_bss_loop>:
 214:	1d 92       	st	X+, r1

00000216 <.do_clear_bss_start>:
 216:	a8 32       	cpi	r26, 0x28	; 40
 218:	b2 07       	cpc	r27, r18
 21a:	e1 f7       	brne	.-8      	; 0x214 <.do_clear_bss_loop>
 21c:	0e 94 c0 01 	call	0x380	; 0x380 <main>
 220:	0c 94 18 02 	jmp	0x430	; 0x430 <_exit>

00000224 <__bad_interrupt>:
 224:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000228 <DMA_ReturnStatus_non_blocking>:
 228:	fc 01       	movw	r30, r24
 22a:	81 81       	ldd	r24, Z+1	; 0x01
 22c:	80 73       	andi	r24, 0x30	; 48
 22e:	08 95       	ret

00000230 <DMA_EnableChannel>:
 230:	fc 01       	movw	r30, r24
 232:	90 81       	ld	r25, Z
 234:	90 68       	ori	r25, 0x80	; 128
 236:	90 83       	st	Z, r25
 238:	08 95       	ret

0000023a <DMA_SetupBlock>:
 23a:	8f 92       	push	r8
 23c:	af 92       	push	r10
 23e:	bf 92       	push	r11
 240:	cf 92       	push	r12
 242:	ef 92       	push	r14
 244:	0f 93       	push	r16
 246:	1f 93       	push	r17
 248:	cf 93       	push	r28
 24a:	df 93       	push	r29
 24c:	cd b7       	in	r28, 0x3d	; 61
 24e:	de b7       	in	r29, 0x3e	; 62
 250:	fc 01       	movw	r30, r24
 252:	60 87       	std	Z+8, r22	; 0x08
 254:	71 87       	std	Z+9, r23	; 0x09
 256:	12 86       	std	Z+10, r1	; 0x0a
 258:	04 87       	std	Z+12, r16	; 0x0c
 25a:	15 87       	std	Z+13, r17	; 0x0d
 25c:	16 86       	std	Z+14, r1	; 0x0e
 25e:	ce 28       	or	r12, r14
 260:	2c 29       	or	r18, r12
 262:	42 2b       	or	r20, r18
 264:	42 83       	std	Z+2, r20	; 0x02
 266:	a4 82       	std	Z+4, r10	; 0x04
 268:	b5 82       	std	Z+5, r11	; 0x05
 26a:	80 81       	ld	r24, Z
 26c:	8c 7d       	andi	r24, 0xDC	; 220
 26e:	88 29       	or	r24, r8
 270:	9e 85       	ldd	r25, Y+14	; 0x0e
 272:	99 23       	and	r25, r25
 274:	29 f0       	breq	.+10     	; 0x280 <DMA_SetupBlock+0x46>
 276:	80 62       	ori	r24, 0x20	; 32
 278:	80 83       	st	Z, r24
 27a:	8d 85       	ldd	r24, Y+13	; 0x0d
 27c:	86 83       	std	Z+6, r24	; 0x06
 27e:	01 c0       	rjmp	.+2      	; 0x282 <DMA_SetupBlock+0x48>
 280:	80 83       	st	Z, r24
 282:	df 91       	pop	r29
 284:	cf 91       	pop	r28
 286:	1f 91       	pop	r17
 288:	0f 91       	pop	r16
 28a:	ef 90       	pop	r14
 28c:	cf 90       	pop	r12
 28e:	bf 90       	pop	r11
 290:	af 90       	pop	r10
 292:	8f 90       	pop	r8
 294:	08 95       	ret

00000296 <DMA_EnableSingleShot>:
 296:	fc 01       	movw	r30, r24
 298:	90 81       	ld	r25, Z
 29a:	94 60       	ori	r25, 0x04	; 4
 29c:	90 83       	st	Z, r25
 29e:	08 95       	ret

000002a0 <DMA_SetTriggerSource>:
 2a0:	fc 01       	movw	r30, r24
 2a2:	63 83       	std	Z+3, r22	; 0x03
 2a4:	08 95       	ret

000002a6 <SetupTransmitChannel>:
 2a6:	8f 92       	push	r8
 2a8:	af 92       	push	r10
 2aa:	bf 92       	push	r11
 2ac:	cf 92       	push	r12
 2ae:	ef 92       	push	r14
 2b0:	0f 93       	push	r16
 2b2:	1f 93       	push	r17
 2b4:	1f 92       	push	r1
 2b6:	1f 92       	push	r1
 2b8:	81 2c       	mov	r8, r1
 2ba:	0f 2e       	mov	r0, r31
 2bc:	f4 e1       	ldi	r31, 0x14	; 20
 2be:	af 2e       	mov	r10, r31
 2c0:	b1 2c       	mov	r11, r1
 2c2:	f0 2d       	mov	r31, r0
 2c4:	c1 2c       	mov	r12, r1
 2c6:	e1 2c       	mov	r14, r1
 2c8:	00 ea       	ldi	r16, 0xA0	; 160
 2ca:	1b e0       	ldi	r17, 0x0B	; 11
 2cc:	20 e1       	ldi	r18, 0x10	; 16
 2ce:	40 e0       	ldi	r20, 0x00	; 0
 2d0:	64 e1       	ldi	r22, 0x14	; 20
 2d2:	70 e2       	ldi	r23, 0x20	; 32
 2d4:	80 e1       	ldi	r24, 0x10	; 16
 2d6:	91 e0       	ldi	r25, 0x01	; 1
 2d8:	0e 94 1d 01 	call	0x23a	; 0x23a <DMA_SetupBlock>
 2dc:	80 e1       	ldi	r24, 0x10	; 16
 2de:	91 e0       	ldi	r25, 0x01	; 1
 2e0:	0e 94 4b 01 	call	0x296	; 0x296 <DMA_EnableSingleShot>
 2e4:	6c ea       	ldi	r22, 0xAC	; 172
 2e6:	80 e1       	ldi	r24, 0x10	; 16
 2e8:	91 e0       	ldi	r25, 0x01	; 1
 2ea:	0e 94 50 01 	call	0x2a0	; 0x2a0 <DMA_SetTriggerSource>
 2ee:	0f 90       	pop	r0
 2f0:	0f 90       	pop	r0
 2f2:	1f 91       	pop	r17
 2f4:	0f 91       	pop	r16
 2f6:	ef 90       	pop	r14
 2f8:	cf 90       	pop	r12
 2fa:	bf 90       	pop	r11
 2fc:	af 90       	pop	r10
 2fe:	8f 90       	pop	r8
 300:	08 95       	ret

00000302 <SetupReceiveChannel>:
 302:	8f 92       	push	r8
 304:	af 92       	push	r10
 306:	bf 92       	push	r11
 308:	cf 92       	push	r12
 30a:	ef 92       	push	r14
 30c:	0f 93       	push	r16
 30e:	1f 93       	push	r17
 310:	1f 92       	push	r1
 312:	1f 92       	push	r1
 314:	81 2c       	mov	r8, r1
 316:	0f 2e       	mov	r0, r31
 318:	f4 e1       	ldi	r31, 0x14	; 20
 31a:	af 2e       	mov	r10, r31
 31c:	b1 2c       	mov	r11, r1
 31e:	f0 2d       	mov	r31, r0
 320:	cc 24       	eor	r12, r12
 322:	c3 94       	inc	r12
 324:	e1 2c       	mov	r14, r1
 326:	00 e0       	ldi	r16, 0x00	; 0
 328:	10 e2       	ldi	r17, 0x20	; 32
 32a:	20 e0       	ldi	r18, 0x00	; 0
 32c:	40 e0       	ldi	r20, 0x00	; 0
 32e:	60 ea       	ldi	r22, 0xA0	; 160
 330:	7b e0       	ldi	r23, 0x0B	; 11
 332:	80 e2       	ldi	r24, 0x20	; 32
 334:	91 e0       	ldi	r25, 0x01	; 1
 336:	0e 94 1d 01 	call	0x23a	; 0x23a <DMA_SetupBlock>
 33a:	80 e2       	ldi	r24, 0x20	; 32
 33c:	91 e0       	ldi	r25, 0x01	; 1
 33e:	0e 94 4b 01 	call	0x296	; 0x296 <DMA_EnableSingleShot>
 342:	6b ea       	ldi	r22, 0xAB	; 171
 344:	80 e2       	ldi	r24, 0x20	; 32
 346:	91 e0       	ldi	r25, 0x01	; 1
 348:	0e 94 50 01 	call	0x2a0	; 0x2a0 <DMA_SetTriggerSource>
 34c:	0f 90       	pop	r0
 34e:	0f 90       	pop	r0
 350:	1f 91       	pop	r17
 352:	0f 91       	pop	r16
 354:	ef 90       	pop	r14
 356:	cf 90       	pop	r12
 358:	bf 90       	pop	r11
 35a:	af 90       	pop	r10
 35c:	8f 90       	pop	r8
 35e:	08 95       	ret

00000360 <SetupUsart>:
 360:	e0 ea       	ldi	r30, 0xA0	; 160
 362:	f6 e0       	ldi	r31, 0x06	; 6
 364:	88 e0       	ldi	r24, 0x08	; 8
 366:	81 83       	std	Z+1, r24	; 0x01
 368:	84 e0       	ldi	r24, 0x04	; 4
 36a:	82 83       	std	Z+2, r24	; 0x02
 36c:	e0 ea       	ldi	r30, 0xA0	; 160
 36e:	fb e0       	ldi	r31, 0x0B	; 11
 370:	83 e0       	ldi	r24, 0x03	; 3
 372:	85 83       	std	Z+5, r24	; 0x05
 374:	84 81       	ldd	r24, Z+4	; 0x04
 376:	88 61       	ori	r24, 0x18	; 24
 378:	84 83       	std	Z+4, r24	; 0x04
 37a:	8c e0       	ldi	r24, 0x0C	; 12
 37c:	86 83       	std	Z+6, r24	; 0x06
 37e:	08 95       	ret

00000380 <main>:
 380:	0e 94 b0 01 	call	0x360	; 0x360 <SetupUsart>
 384:	e0 ee       	ldi	r30, 0xE0	; 224
 386:	f7 e0       	ldi	r31, 0x07	; 7
 388:	8f ef       	ldi	r24, 0xFF	; 255
 38a:	80 83       	st	Z, r24
 38c:	84 83       	std	Z+4, r24	; 0x04
 38e:	e0 e0       	ldi	r30, 0x00	; 0
 390:	f1 e0       	ldi	r31, 0x01	; 1
 392:	80 81       	ld	r24, Z
 394:	80 68       	ori	r24, 0x80	; 128
 396:	80 83       	st	Z, r24
 398:	0e 94 53 01 	call	0x2a6	; 0x2a6 <SetupTransmitChannel>
 39c:	0e 94 81 01 	call	0x302	; 0x302 <SetupReceiveChannel>
 3a0:	c4 e1       	ldi	r28, 0x14	; 20
 3a2:	d0 e2       	ldi	r29, 0x20	; 32
 3a4:	fe 01       	movw	r30, r28
 3a6:	81 e6       	ldi	r24, 0x61	; 97
 3a8:	81 93       	st	Z+, r24
 3aa:	8f 5f       	subi	r24, 0xFF	; 255
 3ac:	85 37       	cpi	r24, 0x75	; 117
 3ae:	e1 f7       	brne	.-8      	; 0x3a8 <main+0x28>
 3b0:	80 e2       	ldi	r24, 0x20	; 32
 3b2:	91 e0       	ldi	r25, 0x01	; 1
 3b4:	0e 94 18 01 	call	0x230	; 0x230 <DMA_EnableChannel>
 3b8:	80 e1       	ldi	r24, 0x10	; 16
 3ba:	91 e0       	ldi	r25, 0x01	; 1
 3bc:	0e 94 18 01 	call	0x230	; 0x230 <DMA_EnableChannel>
 3c0:	00 e0       	ldi	r16, 0x00	; 0
 3c2:	10 e0       	ldi	r17, 0x00	; 0
 3c4:	02 c0       	rjmp	.+4      	; 0x3ca <main+0x4a>
 3c6:	0f 5f       	subi	r16, 0xFF	; 255
 3c8:	1f 4f       	sbci	r17, 0xFF	; 255
 3ca:	80 e2       	ldi	r24, 0x20	; 32
 3cc:	91 e0       	ldi	r25, 0x01	; 1
 3ce:	0e 94 14 01 	call	0x228	; 0x228 <DMA_ReturnStatus_non_blocking>
 3d2:	88 23       	and	r24, r24
 3d4:	c1 f3       	breq	.-16     	; 0x3c6 <main+0x46>
 3d6:	00 93 e4 07 	sts	0x07E4, r16	; 0x8007e4 <__TEXT_REGION_LENGTH__+0x7de7e4>
 3da:	e0 e0       	ldi	r30, 0x00	; 0
 3dc:	f0 e2       	ldi	r31, 0x20	; 32
 3de:	48 e2       	ldi	r20, 0x28	; 40
 3e0:	50 e2       	ldi	r21, 0x20	; 32
 3e2:	21 e0       	ldi	r18, 0x01	; 1
 3e4:	99 91       	ld	r25, Y+
 3e6:	81 91       	ld	r24, Z+
 3e8:	98 13       	cpse	r25, r24
 3ea:	20 e0       	ldi	r18, 0x00	; 0
 3ec:	c4 17       	cp	r28, r20
 3ee:	d5 07       	cpc	r29, r21
 3f0:	c9 f7       	brne	.-14     	; 0x3e4 <main+0x64>
 3f2:	84 e1       	ldi	r24, 0x14	; 20
 3f4:	90 e0       	ldi	r25, 0x00	; 0
 3f6:	e0 ee       	ldi	r30, 0xE0	; 224
 3f8:	f7 e0       	ldi	r31, 0x07	; 7
 3fa:	4f ef       	ldi	r20, 0xFF	; 255
 3fc:	22 23       	and	r18, r18
 3fe:	b1 f0       	breq	.+44     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 400:	85 31       	cpi	r24, 0x15	; 21
 402:	91 05       	cpc	r25, r1
 404:	10 f4       	brcc	.+4      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 406:	01 96       	adiw	r24, 0x01	; 1
 408:	02 c0       	rjmp	.+4      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 40a:	80 e0       	ldi	r24, 0x00	; 0
 40c:	90 e0       	ldi	r25, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 40e:	3f e7       	ldi	r19, 0x7F	; 127
 410:	58 e3       	ldi	r21, 0x38	; 56
 412:	61 e0       	ldi	r22, 0x01	; 1
 414:	31 50       	subi	r19, 0x01	; 1
 416:	50 40       	sbci	r21, 0x00	; 0
 418:	60 40       	sbci	r22, 0x00	; 0
 41a:	e1 f7       	brne	.-8      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 41c:	00 c0       	rjmp	.+0      	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 41e:	00 00       	nop
 420:	dc 01       	movw	r26, r24
 422:	a0 50       	subi	r26, 0x00	; 0
 424:	b0 4e       	sbci	r27, 0xE0	; 224
 426:	3c 91       	ld	r19, X
 428:	34 83       	std	Z+4, r19	; 0x04
 42a:	e8 cf       	rjmp	.-48     	; 0x3fc <main+0x7c>
 42c:	44 83       	std	Z+4, r20	; 0x04
 42e:	e6 cf       	rjmp	.-52     	; 0x3fc <main+0x7c>

00000430 <_exit>:
 430:	f8 94       	cli

00000432 <__stop_program>:
 432:	ff cf       	rjmp	.-2      	; 0x432 <__stop_program>
